// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl
/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid and reads 0. Access to any address
 * in the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    Not(in=address[14], out=lram);
    And(a=lram, b=load, out=loadram);
    RAM16K(in=in, load=loadram, address=address[0..13], out=outram);

    // loadscreen = address[14] & ~address[13]
    Not(in=address[13], out=notaddress13);
    And(a=address[14], b=notaddress13, out=lscreen);
    And(a=lscreen, b=load, out=loadscreen);
    Screen(in=in, load=loadscreen, address=address[0..12], out=outscreen);

    // loadkbd = 
    Not16(in[14..15]=false, in[0..13]=address[0..13], out=allone);
    Or8Way(in[5..7]=false, in[0..4]=address[8..12], out=ormsb);
    Or8Way(in=address[0..7], out=orlsb);
    Or(a=orlsb, b=ormsb, out=orout);
    Not(in=orout, out=norout);
    And(a=address[14], b=address[13], out=f2);
    And(a=f2, b=norout, out=loadkbd);
    Keyboard(out=outkbd);

    Mux4Way16(a=outram, b=outscreen, c=outkbd, d=false, sel[1]=loadkbd, sel[0]=lscreen, out=out);
}
